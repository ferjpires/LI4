@inherits LayoutComponentBase
@using MontagemBelasPizzas.UI.Components.Pages.Account
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager NavigationManager

@if (!isAuthenticated)
{
    <Login />
}
else
{
    <MudThemeProvider Theme="MyCustomTheme" />
    <MudPopoverProvider />
    <MudDialogProvider />
    <MudSnackbarProvider />
    <div class="page bg-[#f5f5f5]">
        <div>
            <NavMenu />
        </div>

        <main>
            <article class="content px-4">
                @Body
            </article>
        </main>
    </div>

    <div id="blazor-error-ui">
        An unhandled error has occurred.
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
}


@code {
    private AuthenticationState? authState;
    private bool isAuthenticated = false;
    private string? userRole;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            authState = await AuthProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            if (user.Identity is not null && user.Identity.IsAuthenticated)
            {
                isAuthenticated = true;
                userRole = user.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.Role)?.Value;
            }

            StateHasChanged();
        }
    }
    
    MudTheme MyCustomTheme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = "7B351C",
            Secondary = "7B351C",
            Tertiary = "FFFFFF"
        },
        LayoutProperties = new LayoutProperties()
        {
            DefaultBorderRadius = "20px"
        }
    };
}